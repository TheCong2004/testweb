{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./login.scss\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUser] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const handleLogin = async e => {\n    e.preventDefault(); // Ngăn chặn hành vi mặc định của form\n    // Kiểm tra thông tin đăng nhập\n    // Ở đây bạn có thể gọi API để xác thực tài khoản/mật khẩu\n    // Ví dụ: const response = await api.login(user, password);\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usernameOremail: username,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Lưu thông tin người dùng vào localStorage\n        localStorage.setItem('user', JSON.stringify(data));\n        history.push('/'); // Điều hướng về trang chủ sau khi đăng nhập thành công\n      } else {\n        alert(\"Đăng nhập không thành công. Vui lòng kiểm tra lại tài khoản và mật khẩu.\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  // Hàm này sẽ được gọi khi người dùng nhấn nút \"Login\"\n  // Bạn có thể thay thế bằng API thực tế của bạn để xác thực người dùng\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Login, \"O6AZA+oD/hnHRCRrGGdF4wkIupk=\", false, function () {\n  return [useHistory];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useHistory","Fragment","_Fragment","jsxDEV","_jsxDEV","Login","_s","username","setUser","password","setPassword","history","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","usernameOremail","data","json","ok","localStorage","setItem","push","alert","err","console","log","_c","$RefreshReg$"],"sources":["D:/movie_trailer/movie-watching/src/pages/auth/login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport\"./login.scss\";\r\nconst Login = () => {\r\n  const [username, setUser] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault(); // Ngăn chặn hành vi mặc định của form\r\n    // Kiểm tra thông tin đăng nhập\r\n    // Ở đây bạn có thể gọi API để xác thực tài khoản/mật khẩu\r\n    // Ví dụ: const response = await api.login(user, password);\r\n    try{ const response = await fetch('http://localhost:5000/api/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ usernameOremail:username, password: password }),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      // Lưu thông tin người dùng vào localStorage\r\n      localStorage.setItem('user', JSON.stringify(data));\r\n      history.push('/'); // Điều hướng về trang chủ sau khi đăng nhập thành công\r\n    } else {\r\n      alert(\"Đăng nhập không thành công. Vui lòng kiểm tra lại tài khoản và mật khẩu.\");\r\n    }}\r\n    catch(err){\r\n      console.log(err);\r\n    }\r\n  }\r\n  // Hàm này sẽ được gọi khi người dùng nhấn nút \"Login\"\r\n  // Bạn có thể thay thế bằng API thực tế của bạn để xác thực người dùng\r\n  return (\r\n   \r\n    <>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,OAAM,cAAc;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AACrB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,OAAO,GAAGX,UAAU,CAAC,CAAC;EAE5B,MAAMY,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB;IACA;IACA;IACA,IAAG;MAAE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,eAAe,EAACf,QAAQ;UAAEE,QAAQ,EAAEA;QAAS,CAAC;MACvE,CAAC,CAAC;MACF,MAAMc,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACf;QACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;QAClDZ,OAAO,CAACiB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLC,KAAK,CAAC,0EAA0E,CAAC;MACnF;IAAC,CAAC,CACF,OAAMC,GAAG,EAAC;MACRC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EACD;EACA;EACA,oBAEE1B,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEP,CAAC;AAACI,EAAA,CApCID,KAAK;EAAA,QAGOL,UAAU;AAAA;AAAAiC,EAAA,GAHtB5B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}