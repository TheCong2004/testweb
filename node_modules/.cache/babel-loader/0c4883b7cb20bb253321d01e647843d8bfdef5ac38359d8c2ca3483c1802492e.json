{"ast":null,"code":"var _jsxFileName = \"D:\\\\movie_trailer\\\\movie-watching\\\\src\\\\components\\\\movie-list\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './movie-list.scss';\nimport { SwiperSlide, Swiper } from 'swiper/react';\n\n// import { Link } from 'react-router-dom';\n// import Button from '../button/Button';\nimport tmdbApi, { category } from '../../api/tmdbApi';\n// import apiConfig from '../../api/apiConfig';\nimport MovieCard from '../movie-card/MovieCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = props => {\n  _s();\n  const [items, setItems] = useState([]);\n\n  /**\r\n   * Lấy danh sách phim\r\n   */\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      const params = {};\n      if (props.type !== 'similar') {\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(props.type, {\n              params\n            });\n            break;\n          default:\n            response = await tmdbApi.getTvList(props.type, {\n              params\n            });\n        }\n      } else {\n        response = await tmdbApi.similar(props.category, props.id);\n      }\n      setItems(response.results);\n    };\n    getList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: /*#__PURE__*/_jsxDEV(Swiper, {\n      grabCursor: true,\n      spaceBetween: 10,\n      slidesPerView: 'auto',\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(MovieCard, {\n          item: item,\n          category: props.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(MovieList, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = MovieList;\nMovieList.propTypes = {\n  category: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired\n};\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","SwiperSlide","Swiper","tmdbApi","category","MovieCard","jsxDEV","_jsxDEV","MovieList","props","_s","items","setItems","getList","response","params","type","movie","getMoviesList","getTvList","similar","id","results","className","children","grabCursor","spaceBetween","slidesPerView","map","item","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["D:/movie_trailer/movie-watching/src/components/movie-list/MovieList.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './movie-list.scss';\r\nimport { SwiperSlide, Swiper} from 'swiper/react';\r\n\r\n// import { Link } from 'react-router-dom';\r\n// import Button from '../button/Button';\r\nimport tmdbApi, {category} from '../../api/tmdbApi';\r\n// import apiConfig from '../../api/apiConfig';\r\nimport MovieCard from '../movie-card/MovieCard';\r\n\r\nconst MovieList = props => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    /**\r\n     * Lấy danh sách phim\r\n     */\r\n    useEffect(() => {\r\n        const getList = async () => {\r\n            let response = null;\r\n            const params = {};\r\n\r\n            if(props.type !== 'similar'){\r\n                switch(props.category){\r\n                    case category.movie:\r\n                        response = await tmdbApi.getMoviesList(props.type, {params});\r\n                        break;\r\n                    default:\r\n                        response = await tmdbApi.getTvList(props.type, {params});\r\n                }\r\n            }else{\r\n                response = await tmdbApi.similar(props.category, props.id);\r\n            }\r\n            setItems(response.results);\r\n        }\r\n        getList();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"movie-list\">\r\n            <Swiper \r\n            grabCursor={true}\r\n            spaceBetween={10}\r\n            slidesPerView={'auto'}>\r\n\r\n                {\r\n                    items.map((item, i) => (\r\n                        <SwiperSlide>\r\n                            <MovieCard item={item} category={props.category} />\r\n                        </SwiperSlide>\r\n                    ))\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovieList.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default MovieList\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,mBAAmB;AAC1B,SAASC,WAAW,EAAEC,MAAM,QAAO,cAAc;;AAEjD;AACA;AACA,OAAOC,OAAO,IAAGC,QAAQ,QAAO,mBAAmB;AACnD;AACA,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAEvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;AACJ;AACA;EACIC,SAAS,CAAC,MAAM;IACZ,MAAMc,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAIC,QAAQ,GAAG,IAAI;MACnB,MAAMC,MAAM,GAAG,CAAC,CAAC;MAEjB,IAAGN,KAAK,CAACO,IAAI,KAAK,SAAS,EAAC;QACxB,QAAOP,KAAK,CAACL,QAAQ;UACjB,KAAKA,QAAQ,CAACa,KAAK;YACfH,QAAQ,GAAG,MAAMX,OAAO,CAACe,aAAa,CAACT,KAAK,CAACO,IAAI,EAAE;cAACD;YAAM,CAAC,CAAC;YAC5D;UACJ;YACID,QAAQ,GAAG,MAAMX,OAAO,CAACgB,SAAS,CAACV,KAAK,CAACO,IAAI,EAAE;cAACD;YAAM,CAAC,CAAC;QAChE;MACJ,CAAC,MAAI;QACDD,QAAQ,GAAG,MAAMX,OAAO,CAACiB,OAAO,CAACX,KAAK,CAACL,QAAQ,EAAEK,KAAK,CAACY,EAAE,CAAC;MAC9D;MACAT,QAAQ,CAACE,QAAQ,CAACQ,OAAO,CAAC;IAC9B,CAAC;IACDT,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKgB,SAAS,EAAC,YAAY;IAAAC,QAAA,eACvBjB,OAAA,CAACL,MAAM;MACPuB,UAAU,EAAE,IAAK;MACjBC,YAAY,EAAE,EAAG;MACjBC,aAAa,EAAE,MAAO;MAAAH,QAAA,EAGdb,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACdvB,OAAA,CAACN,WAAW;QAAAuB,QAAA,eACRjB,OAAA,CAACF,SAAS;UAACwB,IAAI,EAAEA,IAAK;UAACzB,QAAQ,EAAEK,KAAK,CAACL;QAAS;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAAxB,EAAA,CA7CKF,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AA+CfA,SAAS,CAAC4B,SAAS,GAAG;EAClBhC,QAAQ,EAAEJ,SAAS,CAACqC,MAAM,CAACC,UAAU;EACrCtB,IAAI,EAAEhB,SAAS,CAACqC,MAAM,CAACC;AAC3B,CAAC;AAED,eAAe9B,SAAS;AAAA,IAAA2B,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}